buildscript {
    repositories {
        mavenLocal()
        //maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
        maven { url "https://maven.pkg.jetbrains.space/public/p/ktor/eap"}
        //jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:$proguardVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

allprojects {
    group 'com.github.rwsbillyang'
    version "$proxyServerVersion"


    apply plugin: 'idea'
    //apply plugin: 'com.github.johnrengelman.shadow'
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'

    sourceCompatibility = "$jdkVersion"
    targetCompatibility = "$jdkVersion"

    compileKotlin {
        kotlinOptions.jvmTarget = "$jdkVersion"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "$jdkVersion"
    }

    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        mavenLocal()
        //maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://jitpack.io' }
        //jcenter()
        maven { url 'https://kotlin.bintray.com/ktor' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    sourceSets {
        main.kotlin.srcDirs = main.java.srcDirs = ['src']
        test.kotlin.srcDirs = test.java.srcDirs = ['test']
        main.resources.srcDirs = ['resources']
        test.resources.srcDirs = ['testresources']
    }
    // Use KSP Generated sources
    sourceSets.main {
        java.srcDirs("build/generated/ksp/main/kotlin")
    }
    kotlin {
        sourceSets.main {
            kotlin.srcDir("build/generated/ksp/main/kotlin")
        }
    }

    dependencies {
        implementation("ch.qos.logback:logback-classic:$logback_version")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
        implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4")

        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }

}











